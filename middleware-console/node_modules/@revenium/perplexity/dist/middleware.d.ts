import OpenAI from "openai";
import { IChatCompletionRequest } from "./interfaces/chatCompletionRequest";
import { RequestOptions } from "openai/internal/request-options";
export declare class PerplexityReveniumMiddleware {
    private client;
    private working;
    private modelName;
    constructor();
    getGenerativeModel(model: string): {
        createChatCompletion: (params: IChatCompletionRequest) => Promise<OpenAI.Chat.Completions.ChatCompletion & {
            _request_id?: string | null | undefined;
        }>;
        createChatCompletionStream: (params: IChatCompletionRequest) => Promise<import("openai/core/streaming").Stream<OpenAI.Chat.Completions.ChatCompletionChunk> & {
            _request_id?: string | null;
        }>;
        createEmbeddings: (_body: Omit<OpenAI.Embeddings.EmbeddingCreateParams, "model">, _options?: RequestOptions) => Promise<void>;
    };
    private embeddings;
    private streamingChatCompletion;
    private chatCompletion;
    private verifyEnv;
}
