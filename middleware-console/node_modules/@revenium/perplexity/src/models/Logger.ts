import { LOG_LEVELS } from "../utils";

export class Logger {
  private static logLevel: string = process.env.REVENIUM_LOG_LEVEL || "INFO";

  static debug(message: string, data?: any): void {
    if (this.shouldLog(LOG_LEVELS[0])) {
      console.log(`[${LOG_LEVELS[0]}] ${message}`, data || "");
    }
  }

  static info(message: string, data?: any): void {
    if (this.shouldLog(LOG_LEVELS[1])) {
      console.log(`[${LOG_LEVELS[1]}] ${message}`, data || "");
    }
  }

  static warning(message: string, data?: any): void {
    if (this.shouldLog(LOG_LEVELS[2])) {
      console.warn(`[${LOG_LEVELS[2]}] ${message}`, data || "");
    }
  }

  static error(message: string, data?: any): void {
    if (this.shouldLog(LOG_LEVELS[3])) {
      console.error(`[${LOG_LEVELS[3]}] ${message}`, data || "");
    }
  }

  private static shouldLog(level: string): boolean {
    const levels = LOG_LEVELS;
    const currentLevel = levels.indexOf(this.logLevel.toUpperCase());
    const messageLevel = levels.indexOf(level);
    return messageLevel >= currentLevel;
  }
}

export const logger = Logger;
