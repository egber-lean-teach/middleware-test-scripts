"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractVertexAITokenCounts = extractVertexAITokenCounts;
const Logger_1 = require("../models/Logger");
const safeExtract_1 = require("./safeExtract");
function extractVertexAITokenCounts(response) {
    try {
        const usageMetadata = response.usageMetadata;
        if (!usageMetadata) {
            return { inputTokens: 0, outputTokens: 0, totalTokens: 0 };
        }
        const inputTokens = safeExtract_1.safeExtract.number(usageMetadata, "promptTokenCount");
        const outputTokens = safeExtract_1.safeExtract.number(usageMetadata, "candidatesTokenCount");
        const totalTokens = safeExtract_1.safeExtract.number(usageMetadata, "totalTokenCount");
        const cachedTokens = safeExtract_1.safeExtract.number(usageMetadata, "cachedTokenCount");
        const reasoningTokens = safeExtract_1.safeExtract.number(usageMetadata, "reasoningTokenCount");
        return {
            inputTokens,
            outputTokens,
            totalTokens,
            cachedTokens,
            reasoningTokens,
        };
    }
    catch (error) {
        Logger_1.logger.warning("Failed to extract Vertex AI token counts:", error);
        return { inputTokens: 0, outputTokens: 0, totalTokens: 0 };
    }
}
//# sourceMappingURL=extractVertexAITokenCounts.js.map